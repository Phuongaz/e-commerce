version: '3.8'

services:
  nginx:
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
      admin_frontend:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
      - backend_uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    expose:
      - "8081"
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - MONGO_URI=${MONGO_URI}
      - MONGODB_DB=${MONGODB_DB}
      - PORT=8081
      - JWT_SECRET=${JWT_SECRET}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - UPLOAD_DIR=uploads
      - MAX_FILE_SIZE=5242880
    volumes:
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    expose:
      - "80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin_frontend:
    build:
      context: ./AdminPanel
      dockerfile: Dockerfile
    expose:
      - "80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - VITE_BACKEND_URL=/api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  backend_uploads:
    driver: local
  backend_logs:
    driver: local
  mongodb_data:
    driver: local